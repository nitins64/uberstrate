syntax = "proto3";

option go_package = "gitbub.com/uberstrate/idl";

import "model.proto";
import "node.proto";
import "pod.proto";

package statestore;

service StateStoreService {
  rpc SayHello(HelloWorldRequest) returns (HelloWorldResponse) {}
  rpc LoadNodes(LoadNodeRequest) returns (LoadNodeResponse) {}
  rpc PrintNodes(PrintNodeRequest) returns (PrintNodeResponse) {}
  rpc GetNodes(GetNodeRequest) returns (GetNodeResponse) {}
  rpc LoadPods(LoadPodRequest) returns (LoadPodResponse) {}
  rpc GetPods(GetPodRequest) returns (GetPodResponse) {}
  rpc UpdatePods(UpdatePodRequest) returns (UpdatePodResponse) {}
  rpc UpdateNodeTainted(UpdateNodeTaintRequest) returns (UpdateNodeTaintResponse) {}
}

message NodeTainted {
  string node = 1;
  bool taint = 2;
}

message UpdateNodeTaintRequest {
  repeated NodeTainted nodes = 1;
}

message UpdateNodeTaintResponse {
}

message UpdatePodRequest {
  repeated Pod pods = 1;
}

message UpdatePodResponse {
}

message LoadNodeRequest {
    string path = 1;
}

message LoadNodeResponse {
}

message LoadPodRequest {
  string path = 1;
}

message LoadPodResponse {
}

message PrintNodeRequest{}
message PrintNodeResponse{}

message GetPodRequest {
  bool all = 1;
  // all is true, return all pods
  // all is false, return pods with phase
  PodPhase phase = 2;
}

message GetPodResponse {
  repeated Pod pods = 1;
}

message GetNodeRequest {
    int64 above_generation_number = 1;
}

message GetNodeResponse {
    repeated Node nodes = 1;
}

message HelloWorldRequest {
    string name = 1;
}

message HelloWorldResponse {
  string message = 1;
  Model model = 2;
}